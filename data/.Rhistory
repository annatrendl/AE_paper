p.values_2 <- summary(m2)$coefficients[,4]
stargazer(m1,m2, type = "latex",ci=TRUE,single.row = TRUE,
coef = list(as.numeric(c(OR.vector_1)),as.numeric(c(OR.vector_2))),
ci.custom = list(CI.vector_1,CI.vector_2),
p =list(p.values_1, p.values_2),model.numbers = FALSE,
covariate.labels = c("Intercept","Seen all", "TC similarity rating", "TD similarity rating",
"TD rating difference"),
dep.var.labels = "Target chosen", column.labels = c("Model 1","Model 2"),
title = "", order = c(5,1:4),
label = "latentattr_exp2reg")
rm(list = ls())
load("step4_Prepare_choice_data_input.RData")
load("C:/AE_paper/data/step1_Create_decoy_target_output.RData")
load("step5_AE_results_input.RData")
triplets[, Targetchosen := ifelse(Which.chosen == "Target",1,0)]
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
triplets <- triplets[!is.na(Which.chosen), ]
ratings <- trials[trial.type == "rating",]
ratings <- merge(ratings[trial.type == "rating",], genre_info, by.x = "book.id",
by.y = "Movie.id", all.x = T)
ratings[, response := as.numeric(factor(response, levels = as.character(seq(1,7))))]
genre_mean <- ratings[, list(mean_rating = mean(response)), .(worker.id, Category)]
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets <- triplets[Which.chosen != "Decoy",]
triplets[, Similarity_dec := as.numeric(Similarity_dec)]
triplets[, Similarity_comp := as.numeric(Similarity_comp)]
triplets[Similarity_comp==8, Similarity_comp := NA]
triplets[Similarity_dec==8, Similarity_dec := NA]
triplets[, Similarity_comp := scale(Similarity_comp)]
triplets[, Similarity_dec := scale(Similarity_dec)]
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, Target_decoy_ratingdiff := scale(Target_decoy_ratingdiff)]
triplets[, Seen := ifelse(Allseen == TRUE, 0.5, -0.5)]
triplets[, Targetchosen := ifelse(Which.chosen == "Target", 1,0)]
###################now we have to link it back to triplets dataset so need data on genre of each movie
triplets <- merge(triplets, genre_info[, c("Movie.id", "Category")],
by.x = "Target_id", by.y = "Movie.id", all.x = T)
setnames(triplets, c("Category"), c("Target_Category"))
triplets <- merge(triplets, genre_info[, c("Movie.id", "Category")],
by.x = "Competitor_id", by.y = "Movie.id", all.x = T)
setnames(triplets, c("Category"), c("Competitor_Category"))
triplets <- merge(triplets, genre_mean, by.y = c("worker.id", "Category"),
by.x = c("worker.id", "Target_Category"), all.x = T)
setnames(triplets, c("mean_rating"), c("target_genre_av"))
triplets <- merge(triplets, genre_mean, by.y = c("worker.id", "Category"),
by.x = c("worker.id", "Competitor_Category"), all.x = T)
setnames(triplets, c("mean_rating"), c("competitor_genre_av"))
triplets[, genre_ratingdiff := scale(target_genre_av - competitor_genre_av)]
triplets[, genre_ratingdiff_raw := target_genre_av - competitor_genre_av]
summary(m1 <- glmer(Targetchosen ~ 1 + (1|worker.id), data = triplets, family=binomial(link='logit')))
CI.vector_3 <- exp(confint(m3))
OR.vector_3 <- exp(m3@beta)
p.values_3 <- summary(m3)$coefficients[,4]
CI.vector_4 <- exp(confint(m4))
OR.vector_4 <- exp(m4@beta)
p.values_4 <- summary(m4)$coefficients[,4]
stargazer(m3, m4, type = "latex",ci=TRUE,single.row = TRUE,
coef = list(as.numeric(c(OR.vector_3)),as.numeric(c(OR.vector_4))),
ci.custom = list(CI.vector_3,CI.vector_4),
p =list(p.values_3, p.values_4),model.numbers = FALSE,
dep.var.labels = "Target chosen", column.labels = c("Model 3","Model 4"),
title = "")
triplets[, genrechoice := ifelse((target_genre_av > competitor_genre_av & Targetchosen == 1) |
(competitor_genre_av > target_genre_av & Targetchosen == 0), T, F) ]
summary(m3 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
Target_decoy_ratingdiff + genre_ratingdiff + (1|worker.id), data = triplets, family=binomial(link='logit')))
summary(m4 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
Target_decoy_ratingdiff + genre_ratingdiff + genrechoice + (1|worker.id), data = triplets, family=binomial(link='logit')))
CI.vector_3 <- exp(confint(m3))
OR.vector_3 <- exp(m3@beta)
p.values_3 <- summary(m3)$coefficients[,4]
CI.vector_4 <- exp(confint(m4))
OR.vector_4 <- exp(m4@beta)
p.values_4 <- summary(m4)$coefficients[,4]
triplets[1,]
triplets[, genrechoice := ifelse((target_genre_av > competitor_genre_av & Targetchosen == 1) |
(competitor_genre_av > target_genre_av & Targetchosen == 0), 0.5, -0.5) ]
summary(m3 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
Target_decoy_ratingdiff + genre_ratingdiff + (1|worker.id), data = triplets, family=binomial(link='logit')))
summary(m4 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
Target_decoy_ratingdiff + genre_ratingdiff + genrechoice + (1|worker.id), data = triplets, family=binomial(link='logit')))
#
# triplets[, genrechoices := ifelse((target_genre_av > competitor_genre_av & Targetchosen == 1) |
#                                    (competitor_genre_av > target_genre_av & Targetchosen == 0), 0.5, -0.5) ]
#same results
CI.vector_3 <- exp(confint(m3))
OR.vector_3 <- exp(m3@beta)
p.values_3 <- summary(m3)$coefficients[,4]
CI.vector_4 <- exp(confint(m4))
OR.vector_4 <- exp(m4@beta)
p.values_4 <- summary(m4)$coefficients[,4]
stargazer(m3, m4, type = "latex",ci=TRUE,single.row = TRUE,
coef = list(as.numeric(c(OR.vector_3)),as.numeric(c(OR.vector_4))),
ci.custom = list(CI.vector_3,CI.vector_4),
p =list(p.values_3, p.values_4),model.numbers = FALSE,
dep.var.labels = "Target chosen", column.labels = c("Model 3","Model 4"),
title = "")
table(triplets$Target_decoy_ratingdiff)
triplets$Target_decoy_ratingdiff
table(triplets$genrechoice)
prop.table(table(triplets$genrechoice))
triplets
triplets[,table(Which.chosen)]
rm(list = ls())
load("step4_Prepare_choice_data_input.RData")
load("C:/AE_paper/data/step1_Create_decoy_target_output.RData")
load("step5_AE_results_input.RData")
triplets[, Targetchosen := ifelse(Which.chosen == "Target",1,0)]
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
triplets <- triplets[!is.na(Which.chosen), ]
ratings <- trials[trial.type == "rating",]
ratings <- merge(ratings[trial.type == "rating",], genre_info, by.x = "book.id",
by.y = "Movie.id", all.x = T)
ratings[, response := as.numeric(factor(response, levels = as.character(seq(1,7))))]
genre_mean <- ratings[, list(mean_rating = mean(response)), .(worker.id, Category)]
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
rm(list = ls())
load("step4_Prepare_choice_data_input.RData")
load("C:/AE_paper/data/step1_Create_decoy_target_output.RData")
load("step5_AE_results_input.RData")
triplets[, Targetchosen := ifelse(Which.chosen == "Target",1,0)]
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
triplets <- triplets[!is.na(Which.chosen), ]
ratings <- trials[trial.type == "rating",]
ratings <- merge(ratings[trial.type == "rating",], genre_info, by.x = "book.id",
by.y = "Movie.id", all.x = T)
ratings[, response := as.numeric(factor(response, levels = as.character(seq(1,7))))]
genre_mean <- ratings[, list(mean_rating = mean(response)), .(worker.id, Category)]
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := as.numeric(Similarity_dec)]
triplets[, Similarity_comp := as.numeric(Similarity_comp)]
triplets[Similarity_comp==8, Similarity_comp := NA]
triplets[Similarity_dec==8, Similarity_dec := NA]
triplets[, Similarity_comp := scale(Similarity_comp)]
triplets[, Similarity_dec := scale(Similarity_dec)]
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, Target_decoy_ratingdiff := scale(Target_decoy_ratingdiff)]
triplets[, Seen := ifelse(Allseen == TRUE, 0.5, -0.5)]
triplets[, Targetchosen := ifelse(Which.chosen == "Target", 1,0)]
triplets[,table(Which.chosen)]
triplets[, list(sum(Targetchosen)/.N), .(Target_decoy_ratingdiff)]
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, list(sum(Targetchosen)/.N), .(Target_decoy_ratingdiff)]
rm(list = ls())
load("step4_Prepare_choice_data_input.RData")
load("C:/AE_paper/data/step1_Create_decoy_target_output.RData")
load("step5_AE_results_input.RData")
triplets[, Targetchosen := ifelse(Which.chosen == "Target",1,0)]
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
triplets <- triplets[!is.na(Which.chosen), ]
ratings <- trials[trial.type == "rating",]
ratings <- merge(ratings[trial.type == "rating",], genre_info, by.x = "book.id",
by.y = "Movie.id", all.x = T)
ratings[, response := as.numeric(factor(response, levels = as.character(seq(1,7))))]
genre_mean <- ratings[, list(mean_rating = mean(response)), .(worker.id, Category)]
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := as.numeric(Similarity_dec)]
triplets[, Similarity_comp := as.numeric(Similarity_comp)]
triplets[Similarity_comp==8, Similarity_comp := NA]
triplets[Similarity_dec==8, Similarity_dec := NA]
triplets[, Similarity_comp := scale(Similarity_comp)]
triplets[, Similarity_dec := scale(Similarity_dec)]
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, Target_decoy_ratingdiff := scale(Target_decoy_ratingdiff)]
triplets[, Seen := ifelse(Allseen == TRUE, 0.5, -0.5)]
triplets[, Targetchosen := ifelse(Which.chosen == "Target", 1,0)]
###################now we have to link it back to triplets dataset so need data on genre of each movie
triplets <- merge(triplets, genre_info[, c("Movie.id", "Category")],
by.x = "Target_id", by.y = "Movie.id", all.x = T)
setnames(triplets, c("Category"), c("Target_Category"))
triplets <- merge(triplets, genre_info[, c("Movie.id", "Category")],
by.x = "Competitor_id", by.y = "Movie.id", all.x = T)
setnames(triplets, c("Category"), c("Competitor_Category"))
triplets <- merge(triplets, genre_mean, by.y = c("worker.id", "Category"),
by.x = c("worker.id", "Target_Category"), all.x = T)
setnames(triplets, c("mean_rating"), c("target_genre_av"))
triplets <- merge(triplets, genre_mean, by.y = c("worker.id", "Category"),
by.x = c("worker.id", "Competitor_Category"), all.x = T)
setnames(triplets, c("mean_rating"), c("competitor_genre_av"))
triplets[, genre_ratingdiff := scale(target_genre_av - competitor_genre_av)]
triplets[, genre_ratingdiff_raw := target_genre_av - competitor_genre_av]
#summary(m1 <- glmer(Targetchosen ~ 1 + (1|worker.id), data = triplets, family=binomial(link='logit')))
#summary(m2 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
#                      Target_decoy_ratingdiff + (1|worker.id), data = triplets, family=binomial(link='logit')))
triplets[, genrechoice := ifelse((target_genre_av > competitor_genre_av & Targetchosen == 1) |
(competitor_genre_av > target_genre_av & Targetchosen == 0), 0.5, -0.5) ]
summary(m3 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
Target_decoy_ratingdiff + genre_ratingdiff + (1|worker.id), data = triplets, family=binomial(link='logit')))
summary(m4 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
Target_decoy_ratingdiff + genre_ratingdiff + genrechoice + (1|worker.id), data = triplets, family=binomial(link='logit')))
#
# triplets[, genrechoices := ifelse((target_genre_av > competitor_genre_av & Targetchosen == 1) |
#                                    (competitor_genre_av > target_genre_av & Targetchosen == 0), 0.5, -0.5) ]
choices_distr <- triplets[abs(genre_ratingdiff_raw) < 0.25, list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
t.test(choices_distr[,Target_prop], alternative = "greater", conf.level=0.95, mu = 0.5)
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
triplets[, list(sum(Targetchosen)/.N), .(Target_decoy_ratingdiff)]
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, list(sum(Targetchosen)/.N), .(Target_decoy_ratingdiff)]
function of decoy target rating differenc
triplets[Which.chosen != "Decoy", Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[Which.chosen != "Decoy", Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[Which.chosen != "Decoy", list(sum(Targetchosen)/.N), .(Target_decoy_ratingdiff)]
toplot[1,]
toplot <- data.table(Target_decoy_ratingdiff = 3:6, Prop = NA, Lower = NA, Upper = NA)
toplot[1,]
dataset <- triplets[Which.chosen != "Decoy" & Target_decoy_ratingdiff == toplot[i, Target_decoy_ratingdiff,],]
i <- 1
dataset <- triplets[Which.chosen != "Decoy" & Target_decoy_ratingdiff == toplot[i, Target_decoy_ratingdiff,],]
dataset
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
library(boot)
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
calcmean <- function(data, index) {
mean(data[index, Targetchosen])
}
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
bsTind
boot.ci(bsTind, conf=0.95, type=c("basic", "bca"))
bsTind$t0
bootcis<- boot.ci(bsTind, conf=0.95, type=c("basic", "bca"))
bootcis$t0
bootcis$bca
bootcis$bca[4]
for (i in 1:nrow(toplot)) {
dataset <- triplets[Which.chosen != "Decoy" & Target_decoy_ratingdiff == toplot[i, Target_decoy_ratingdiff,],]
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
bootcis<- boot.ci(bsTind, conf=0.95, type=c("basic", "bca"))
dataset[i, Prop := bsTind$t0]
dataset[i, Lower := bootcis$bca[4]]
dataset[i, Upper := bootcis$bca[5]]
print(i)
}
toplot
dataset
toplot <- data.table(Target_decoy_ratingdiff = 3:6, Prop = NA, Lower = NA, Upper = NA)
for (i in 1:nrow(toplot)) {
dataset <- triplets[Which.chosen != "Decoy" & Target_decoy_ratingdiff == toplot[i, Target_decoy_ratingdiff,],]
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
bootcis<- boot.ci(bsTind, conf=0.95, type=c("basic", "bca"))
toplot[i, Prop := bsTind$t0]
toplot[i, Lower := bootcis$bca[4]]
toplot[i, Upper := bootcis$bca[5]]
print(i)
}
toplot
toplot
toplot <- data.table(Target_decoy_ratingdiff = 3:6, Prop = 0, Lower = 0, Upper = 0)
for (i in 1:nrow(toplot)) {
dataset <- triplets[Which.chosen != "Decoy" & Target_decoy_ratingdiff == toplot[i, Target_decoy_ratingdiff,],]
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
bootcis<- boot.ci(bsTind, conf=0.95, type=c("basic", "bca"))
toplot[i, Prop := bsTind$t0]
toplot[i, Lower := bootcis$bca[4]]
toplot[i, Upper := bootcis$bca[5]]
print(i)
}
toplot
toplot
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + geom_point()
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + geom_point() + geom_errorbar(aes(ymin = Lower, yamx = Upper))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where the target was chosen", x = "Target Decoy rating difference")
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where the target was chosen", x = "Target Decoy rating difference")  + theme(aspect.ratio=4/3))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where the target was chosen", x = "Target Decoy rating difference")  + theme(aspect.ratio=4/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target Decoy rating difference")  + theme(aspect.ratio=4/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target—Decoy rating difference")  + theme(aspect.ratio=4/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=4/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper)) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=2/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width 7 2) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=2/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 2) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=2/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=2/3)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=1)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=1, text = element_text(size = 17))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=1)
ggsave("figure5.pdf")
getwd()
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() + geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) + labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  + theme(aspect.ratio=1)
ggsave("figure5.pdf")
rm(list=ls())
library(simpleboot)
library(data.table)
library(ggplot2)
library(ggthemes)
library(lme4)
library(stargazer)
setwd("C:/AE_paper/data")
load("step5_AE_results_input.RData")
#theres one NA, get rid of it
triplets <- triplets[!is.na(Which.chosen), ]
########################
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
#2 target-comp and 1 target-dec similarity ratings are missing
similarity <- rbind(data.table("rating" = triplets[,Similarity_comp], "type" = "Target-Competitor"),
data.table("rating" = triplets[,Similarity_dec], "type" = "Target-Decoy"))
similarity <- similarity[,.N ,.(type, rating)]
ggplot(similarity[!is.na(rating),], aes(rating, N)) + geom_bar(stat = "identity",fill= "royalblue")+
facet_wrap(~ type, ncol = 1) + theme_few()+
labs(x= "Similarity Rating (1 = Least Similar, 7 = Most Similar)", y = "Frequency") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
text = element_text(size = 18),strip.text = element_text(size = 17),  aspect.ratio=0.4)
ggsave("Figure5.pdf")
rm(list = ls())
load("step4_Prepare_choice_data_input.RData")
load("C:/AE_paper/data/step1_Create_decoy_target_output.RData")
load("step5_AE_results_input.RData")
triplets[, Targetchosen := ifelse(Which.chosen == "Target",1,0)]
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
triplets <- triplets[!is.na(Which.chosen), ]
ratings <- trials[trial.type == "rating",]
ratings <- merge(ratings[trial.type == "rating",], genre_info, by.x = "book.id",
by.y = "Movie.id", all.x = T)
ratings[, response := as.numeric(factor(response, levels = as.character(seq(1,7))))]
genre_mean <- ratings[, list(mean_rating = mean(response)), .(worker.id, Category)]
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := as.numeric(Similarity_dec)]
triplets[, Similarity_comp := as.numeric(Similarity_comp)]
triplets[Similarity_comp==8, Similarity_comp := NA]
triplets[Similarity_dec==8, Similarity_dec := NA]
triplets[, Similarity_comp := scale(Similarity_comp)]
triplets[, Similarity_dec := scale(Similarity_dec)]
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, Target_decoy_ratingdiff := scale(Target_decoy_ratingdiff)]
triplets[, Seen := ifelse(Allseen == TRUE, 0.5, -0.5)]
triplets[, Targetchosen := ifelse(Which.chosen == "Target", 1,0)]
###################now we have to link it back to triplets dataset so need data on genre of each movie
triplets <- merge(triplets, genre_info[, c("Movie.id", "Category")],
by.x = "Target_id", by.y = "Movie.id", all.x = T)
setnames(triplets, c("Category"), c("Target_Category"))
triplets <- merge(triplets, genre_info[, c("Movie.id", "Category")],
by.x = "Competitor_id", by.y = "Movie.id", all.x = T)
setnames(triplets, c("Category"), c("Competitor_Category"))
triplets <- merge(triplets, genre_mean, by.y = c("worker.id", "Category"),
by.x = c("worker.id", "Target_Category"), all.x = T)
setnames(triplets, c("mean_rating"), c("target_genre_av"))
triplets <- merge(triplets, genre_mean, by.y = c("worker.id", "Category"),
by.x = c("worker.id", "Competitor_Category"), all.x = T)
setnames(triplets, c("mean_rating"), c("competitor_genre_av"))
triplets[, genre_ratingdiff := scale(target_genre_av - competitor_genre_av)]
triplets[, genre_ratingdiff_raw := target_genre_av - competitor_genre_av]
#summary(m1 <- glmer(Targetchosen ~ 1 + (1|worker.id), data = triplets, family=binomial(link='logit')))
#summary(m2 <- glmer(Targetchosen ~ Seen + Similarity_dec  + Similarity_comp +
#                      Target_decoy_ratingdiff + (1|worker.id), data = triplets, family=binomial(link='logit')))
triplets[, genrechoice := ifelse((target_genre_av > competitor_genre_av & Targetchosen == 1) |
(competitor_genre_av > target_genre_av & Targetchosen == 0), 0.5, -0.5) ]
choices_distr <- triplets[abs(genre_ratingdiff_raw) < 0.25, list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
t.test(choices_distr[,Target_prop], alternative = "greater", conf.level=0.95, mu = 0.5)
choices_distr <- triplets[Which.chosen != "Decoy", list(Target_prop =sum(Targetchosen)/.N,
No.choices = .N),by = worker.id]
#plot the attraction effect as a function of decoy target rating differenc
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
calcmean <- function(data, index) {
mean(data[index, Targetchosen])
}
toplot <- data.table(Target_decoy_ratingdiff = 3:6, Prop = 0, Lower = 0, Upper = 0)
for (i in 1:nrow(toplot)) {
dataset <- triplets[Which.chosen != "Decoy" & Target_decoy_ratingdiff == toplot[i, Target_decoy_ratingdiff,],]
bsTind <- boot(dataset,
statistic=calcmean, strata = as.factor(dataset$worker.id), R=10000)
bootcis<- boot.ci(bsTind, conf=0.95, type=c("basic", "bca"))
toplot[i, Prop := bsTind$t0]
toplot[i, Lower := bootcis$bca[4]]
toplot[i, Upper := bootcis$bca[5]]
print(i)
}
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
theme(aspect.ratio=1)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
theme(aspect.ratio=3/4)
#somehow exploit the fact that we have another experiment
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,0,1), "cm"))
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"))
ggsave("figure6.pdf")
savepdf <- function(file, width=16, height=10) {
fname <- paste("figures/",file,".pdf",sep="")
pdf(fname, width=width/2.54, height=height/2.54,
pointsize=10)
par(mgp=c(2.2,0.45,0), tcl=-0.4, mar=c(3.3,3.6,1.1,1.1))
}
p1 <- ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"))
savepdf(p1)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
#theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"))
ggsave("figure6.pdf", width = 10, height = 8)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
#theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"), text = element_text(size = 17))
ggsave("figure6.pdf", width = 10, height = 8)
#somehow exploit the fact that we have another experiment
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
#theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"), text = element_text(size = 20))
ggsave("figure6.pdf", width = 8, height = 6)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
#theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"), text = element_text(size = 17)) +
geom_hline(aes(yintercept = 0), linetype = 4)
ggsave("figure6.pdf", width = 8, height = 6)
ggplot(toplot, aes(Target_decoy_ratingdiff, Prop)) + theme_bw() + geom_point() +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.5) + ylim(c(0,1)) +
labs(y = "Proportion of trials where\nthe target was chosen", x = "Target-Decoy rating difference")  +
#theme(aspect.ratio=3/4)+
theme(plot.margin = unit(c(1,1,1,1), "cm"), text = element_text(size = 17)) +
geom_hline(aes(yintercept = 0.5), linetype = 4)
ggsave("figure6.pdf", width = 8, height = 6)
table(triplets$Similarity_dec)
triplets[, Target_decoy_ratingdiff := Target_rating - Decoy_rating]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := as.numeric(Similarity_dec)]
triplets[Similarity_dec==8, Similarity_dec := NA]
rm(list = ls())
load("step4_Prepare_choice_data_input.RData")
load("C:/AE_paper/data/step1_Create_decoy_target_output.RData")
load("step5_AE_results_input.RData")
triplets[, Targetchosen := ifelse(Which.chosen == "Target",1,0)]
triplets <- triplets[!is.na(Which.chosen), ]
triplets[, Similarity_comp := factor(Similarity_comp,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := factor(Similarity_dec,
labels = c("1","2","3","4","5","6","7", "Don't know"))]
triplets[, Similarity_dec := as.numeric(Similarity_dec)]
triplets[, Similarity_comp := as.numeric(Similarity_comp)]
triplets[Similarity_comp==8, Similarity_comp := NA]
triplets[Similarity_dec==8, Similarity_dec := NA]
triplets[, Targetchosen := ifelse(Which.chosen == "Target", 1,0)]
triplets
?sample
sample(c(8,3,4,5,6,7,9), 3, replace = T)
sample(c(8,3,4,5,6,7,9), 3, replace = T)
sample(c(8,3,4,5,6,7,9), 3, replace = T)
sample(c(8,3,4,5,6,7,9), 3, replace = T)
sample(c(8,3,4,5,6,7,9), 3, replace = T)
sample(c(8,3,4,5,6,7,9), 3, replace = T)
2334/12
<margins
?margins
load("C:/Anna/latent_attraction/Movies_2ndgo/movie_lsas.RData")
#to make sure the semantic matching is stabile, keep only those that are within the 10% in the 20/74 version
get.matching.pairs <- function(version, cutoff) {
if (version == 74) {
Documents<- data.table(lsa_74dims_all[[1]][movie.id %in% genre_info[,Movie.id],])
} else {
Documents<- data.table(lsa_20dims_all[[1]][movie.id %in% genre_info[,Movie.id],])
}
Documents[title == "Le cinquième élément", title := "The Fifth Element"]
distancematrix <- merge(Documents,data.table(title = genre_info[,Title], id = 1:400), by = "title", all.x = TRUE)
distancematrix <- data.table(distancematrix[order(id)])
Documents<- data.table(lsa_20dims_all[[1]][movie.id %in% genre_info[,Movie.id],])
Documents[title == "Le cinquième élément", title := "The Fifth Element"]
distancematrix <- merge(Documents,data.table(title = genre_info[,Title], id = 1:400), by = "title", all.x = TRUE)
distancematrix <- data.table(distancematrix[order(id)])
Documents
